class(grades)
grades  <- is.numberic(grades)
grades  <- is.numeric(grades)
mean(grades)
grades
grades <- c(54, 50, 79, 79, 51, 69, 55, 62, 100, 80)
answer <- mean(grades) + 1.28 * sd(grades)
iqr <- IQR(grades)
require(UsingR)
data(kid.weights)
attach(kid.weights)
require(UsingR)
data(kid.weights)
attach(kid.weights)
install.packages("dotchart2")
dotchart(wts)
wts  <- kid.weights[,2]
dotchart(wts)
dotchart(wts, row.names(wts))
View(kid.weights)
qqnorm(wts)
stripchart(wts)
dotplot(wts)
boxplot(wts)
boxplot(wts, horizontal=TRUE)
View(kid.weights)
boxplot(wts, kid.weights$height, horizontal=TRUE)
data()
data("michelson")
data("michelson")
attach(kid.weights, michelson)
attach(michelson)
View(michelson)
boxplot(speed ~ Expt, data=michelson)
boxplot(Speed ~ Expt, data=michelson)
boxplot(Speed ~ Expt, data=michelson, subset=Run %in% 11:20)#Model formula example.  Speed is broken into groups defined my Expt (Speed in theis case is the y value)
boxplot(Speed ~ Expt, data=michelson)#Model formula example.  Speed is broken into groups defined my Expt (Speed in theis case is the y value)
boxplot(Speed ~ Expt, data=michelson)#Model formula example.  Speed is broken into groups defined my Expt (Speed in theis case is the y value)
boxplot(Speed ~ Expt, data=michelson)#Model formula example. Speed is broken into groups defined my Expt (Speed in theis case is the y value)
boxplot(Speed ~ Expt, data=michelson, subset=Run %in% 11:20)
boxplot(Speed ~ Expt, data=michelson)#Model formula example. Speed is broken into groups defined my Expt (Speed in theis case is the y value)
boxplot(Speed ~ Expt, data=michelson, subset=Expt %in% 3:4)
plot(Speed ~ Expt, data=michelson)
summary(Speed ~ Expt, data=michelson)
class michelson
class michelson
class(michelson)
summary(kid.weights)
summary(Height ~ weight, data=kid.weights)
summary(height ~ weight, data=kid.weights)
plot(summary(Speed ~ Expt, data=michelson))#Look at summary(Speed ~ Expt, data=michelson) and summary(height ~ weight, data=kid.weights) - interesting
require(UsingR)
data(kid.weights)
data("michelson")
attach(kid.weights)
attach(michelson)
headtail(michelson)
b <- list("beets" = beets, "no beets"=no_beets)
beets <- c(41, 40, 41, 42, 44, 35, 41, 36, 47, 45)
no_beets <- c(51, 51, 50, 42, 40, 31, 43, 45)
b <- list("beets" = beets, "no beets"=no_beets)
b
stacked <- stack(b)
stacked
b
class(stacked)
plot(vlaues ~ ind, data=stacked)
plot(values ~ ind, data=stacked)
speeds <- split(michelson$Speed, michelson$Expt)
speeds
speeds <- stacked(speeds)
speeds <- stack(speeds)
speeds
data("fat")
attach(fat)
View(fat)
plot(fat$wrist, fat$neck) #is the ame as
plot(neck ~ wrist, fat)
cor(fat$wrist, fat$neck)
cor(fat$wrist, fat$height) #mildly correlated
cor(fat$age, fat$ankle) #uncorrelated
data("MASS")
data()
data("ToothGrowth") #not part of UsingR
cor(ToothGrowth$dose, ToothGrowth$len)
l <- split(ToothGrowth$len, ToothGrowth$dose)
l
group_means <- c(mean(l[[1]]), mean l[[2]], mean l[[3]])
group_means <- c(mean(l[[1]]), mean l[[2]], mean l[[3]]))
l <- split(ToothGrowth$len, ToothGrowth$dose)
group_means <- c(mean(l[[1]]), mean l[[2]], mean l[[3]]))
group_means <- c(mean(l[[1]]), mean l[[2]], mean l[[3]])
group_means <- c(mean l[[1]])
group_means <- c(mean l[[1]]))
groupmeans <- c(mean l[[1]]))
l
l[[1]]
groupmeans <- c(mean (l[[1]]), mean(l[[2]]), mean(l[[3]]))
groupmeans
cor(c(0.5, 1, 2), groupmeans)
require(UsingR)
data(kid.weights)
data("michelson")
data("fat")
data("MASS")
data("ToothGrowth") #not part of UsingR
attach(kid.weights)
attach(michelson)
attach(fat)
data("SAT")
attach(SAT)
View(SAT)
cor(SAT$salary, SAT$total)
plot(total ~ salary, data=SAT)
points(total ~ salary, SAT, subset = perc<10, pch=15)#squares
points(total ~ salary, SAT, subset = perc>40, pch=16)#solid
require(dplyr)
cor10 <- filter(SAT, SAT$perc<10)
View(cor10)
cor10 <- SAT %>% filter(perc<10) %>% select(salary, total)
View(cor10)
corMiddle <- SAT %>% filter(perc>10, perc<40) %>% select(salary, total)
cor40 <- SAT %>% filter(perc>40) %>% select(salary, total)
c(less=cor10, middle=corMiddle, more=cor40)
c(less=cor10$total, cor$salary)
c(less=cor(cor10$total, cor$salary))
cor(cor10$total, cor$salary)
cor(cor10$total, cor10$salary)
c(less=cor(cor10$total, cor10$salary), middle=cor(corMiddle$total, corMiddle$salary), cor(cor40$total, cor40$salary))
data("heartrate")
attach(heartrate)
View(heartrate)
residual <- lm(maxrate ~ age, data=heartrate)
residual
plot(maxrate ~ age, heartrate)
abline(residual)
coef(residual)
require(dplyr)
require(UsingR)
data(kid.weights)
data("michelson")
data("fat")
data("SAT")
data("heartrate")
data("ToothGrowth") #not part of UsingR
attach(kid.weights)
attach(michelson)
attach(fat)
attach(SAT)
attach(heartrate)
predict(residuals, data.frame(age=c(30, 40)))
predict(residual, data.frame(age=c(30, 40)))
residual <- lm(maxrate ~ age, data=heartrate)#to determine max heart rate by age, tradition is to 220- age (a line slope -1 intercept 220)
predict(residual, data.frame(age=c(30, 40)))
plot(residual)
plot(residual)
?usingr
?UsingR
answers()
seatbelts <- matrix(c(56, 2, 8, 16), nrows=2)
seatbelts <- matrix(c(56, 2, 8, 16), nrow=2)
seatbelts
rownames(seatbelts)  <- c("buckled", "unbuckled")
colnames(seatbelts) <- c("buckled", "unbuckled")
seatbelts
dimnames(seatbelts) <- list(parent=c("buckled", "unbuckled"), child=c("buckled", "unbuckled"))
data("grades")
View(grades)
gradeTable <- table(grades$prev), grades$grade)
gradeTable <- table(grades$prev, grades$grade)
gradeTable
class(gradeTable)
class(seatbelts)
margin.table(seatbelts, margin=1)
margin.table(grades, margin=2)
grades <- as data(grades)
grades <- as data.frame(grades)
grades <- as data.frame(gradeTable)
grades <- data.frame(gradeTable)
gradeTable <- table(grades$prev, grades$grade)
margin.table(gradeTable, margin=2)#fails because  the data is not an array
grades <- data.frame(gradeTable)
data("grades")
gradeTable <- table(grades$prev, grades$grade)
margin.table(gradeTable, margin=2)#fails because  the data is not an array
addargins(seatbelts)
addmargins(seatbelts)
require(dplyr)
require(UsingR)
attach(kid.weights)
attach(michelson)
attach(fat)
attach(SAT)
attach(heartrate)
attach(grades)
data("grades")
data("kid.weights")
data("michelson")
data("fat")
data("SAT")
data("heartrate")
data("grades")
#data("MASS")
data("ToothGrowth") #not part of UsingR
prop.table(table(grades$prev, grades$grade), margin=1)*100
prop.table(table(grades$prev, grades$grade), margin=1)
prop.table((grades$prev, grades$grade), margin=1)*100
table(grades$prev, grades$grade)
margin.table(grades)
View(grades)
margin.table(table(grades$prev, grades$grade))
table(grades$prev, grades$grade)
prop.table(table(grades$prev, grades$grade), margin=1)*100
15/28
data("HistData")
require(HistData)
data("Fingerprints")
attach(Fingerprints)
View(Fingerprints)
require(MASS)
data("Cars93")
attach(Cars93)
View(Cars93)
xtabs(count ~ Whorls + Loops, Fingerprints)
plot(count ~ Whorls + Loops, Fingerprints)
xtabs(~ Origin + Type, Cars93)
xtabs(count ~ Origin + Type, Cars93)
xtabs(count ~ ., Fingerprints)
require(dplyr)
require(UsingR)
require(HistData)
require(MASS)
data("kid.weights")
data("michelson")
data("fat")
data("SAT")
data("heartrate")
data("grades")
data("Fingerprints")
data("Cars93")
data("ToothGrowth") #not part of UsingR
attach(kid.weights)
attach(michelson)
attach(fat)
attach(SAT)
attach(heartrate)
attach(grades)
attach(Fingerprints)
attach(Cars93)
seatbelts <- matrix(c(56, 2, 8, 16), nrow=2)
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage")
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage", beside=TRUE)
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage", legend.text=TRUE) #stacked bars
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage", legend.text=TRUE) #stacked bars
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage", beside=TRUE, legend.text=TRUE)
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage", axisnames = TRUE) #stacked bars
dimnames(seatbelts) <- list(parent=c("buckled", "unbuckled"), child=c("buckled", "unbuckled"))
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage") #stacked bars
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage", beside=TRUE)
t(barplot(seatbelts))
t(barplot(seatbelts, xlab="Child"))
prop.table(seatblets)
barplot(seatbelts, xlab="Parent", main="Child Seat Belt Usage") #stacked bars
barplot(prop.table(seatbelts), xlab="Parent", main="Child Seat Belt Usage") #stacked bars
data("Titanic")
attach(Titanic)
class(Titanic)
Titanic
titanic <-  as.data.frame(Titatnic)
titanic <-  as.data.frame(Titanic)
View(titanic)
str(titanic)
mosaicplot(titanic)
?mosaicplot
titanic2 <- titanic
str(titanic2)
titanic2 <- Titanic
str(titanic2)
str(titanic)
mosaicplot(xtabs(Freq ~ Sex, titanic))
mosaicplot(xtabs(Freq ~ Sex + Survived, titanic))
mosaicplot(xtabs(Freq ~ Sex + Survived + Class, titanic))
mosaicplot(xtabs(Freq ~ Class +Sex + Survived, titanic))
mosaicplot(xtabs(Freq ~ Class + Survived, titanic))
mosaicplot(xtabs(Freq ~ Class + Survived + Sex, titanic))
mosaicplot(xtabs(Freq ~  Class + Survived, titanic))
mosaicplot(xtabs(Freq ~  Survived + Class, titanic))
Survived <- rep(titanic$Survived, titanic$Freq)
Survived
class(Survived)
Survived <- rep(titanic$Survived)
Survived
View(titanic)
sum(titanic$Freq)
Survived <- ordered(Survived)
Survived
Survived <- rep(titanic$Survived, titanic$Freq)#makes a factor class of Yes and No for each of the 2201 passengers
Survived <- ordered(Survived)
Survived
Class <- rep(titanic$Class, titanic$Freq)
Class <- ordered(Class)
head(Class)
Class
cor(as.numeric(Survived), as.numeric(Class), method="kendall")
?Ordered
?ordered
require(dplyr)
require(UsingR)
require(HistData)
require(MASS)
data("kid.weights")
data("michelson")
data("fat")
data("SAT")
data("heartrate")
data("grades")
data("Fingerprints")
data("Titanic")
data("Cars93")
data("ToothGrowth") #not part of UsingR
attach(kid.weights)
attach(michelson)
attach(fat)
attach(SAT)
attach(heartrate)
attach(grades)
attach(Fingerprints)
attach(Cars93)
attach(Titanic)
lst1 <- with(ToothGrowth, split(len, supp))
sapply(lst1, mean)
sapply(lst1, mean, sd)
sapply(lst1, sd)
with(ToothGrowth, len, supp, sd)
with(ToothGrowth, tapply( len, supp, sd))
with(ToothGrowth, tapply(len, list(supp, dose), mean))
agrregate(len~supp, ToothGrowth, mean)
aggregate(len~supp, ToothGrowth, mean)
replicate(5, rnorm(3))
?replicate
library("lattice", lib.loc="E:/R/R-3.2.1/library")
require(lattice)
xyploy(MPG.highway ~ Weight | Price, Cars93)
xyplot(MPG.highway ~ Weight | Price, Cars93)
prices <- equal.count(Cars93$Price, number=3, overlap=0)
prices
xyplot(MPG.highway ~ Weight | prices, Cars93)
xyplot((MPG.highway ~ Weight | prices, Cars93), labels=c("Cheap", "Middle", "Expensive"))
xyplot((MPG.highway ~ Weight | prices, Cars93, labels=c("Cheap", "Middle", "Expensive")
xyplot(MPG.highway ~ Weight | prices, Cars93)
xyplot(MPG.highway ~ Weight | prices, Cars93, layout=c(3,1))
xyplot(MPG.highway ~ Weight | prices, Cars93, layout=c(3,1), labels=c("Cheap", "Middle", "Expensive"))
xyplot(MPG.highway ~ Weight | prices, Cars93, layout=c(3,1), labels=c("Cheap", "Middle", "Expensive"))
xyplot(MPG.highway ~ Weight | prices, Cars93, layout=c(3,1))
View(Cars93)
cars2 <- t(Cars93)
View(cars2)
cars21 <- transform(Cars93, price=cut(c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive")))
cars21 <- transform(Cars93, price=cut(Price, c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive")))
View(cars21)
xyplot(MPG.highway ~ Weight | price, cars21)
xyplot(MPG.highway ~ Weight | price, cars21, layout=c(3,1))
xyplot(MPG.highway ~ Weight | price, cars21, layout=c(3,1), type=c("p", "r"))
xyplot(MPG.highway ~ Weight | price, cars93, layout=c(3,1), type=c("p", "r"))
xyplot(MPG.highway ~ Weight | price, Cars93, layout=c(3,1), type=c("p", "r"))
Cars93_1 <- transform(Cars93, price=cut(Price, c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive")))
xyplot(MPG.highway ~ Weight | price, Car93_1, layout=c(3,1), type=c("p", "r"))
require(dplyr)
require(UsingR)
require(HistData)
require(MASS)
require(lattice)
data("kid.weights")
data("michelson")
data("fat")
data("SAT")
data("heartrate")
data("grades")
data("Fingerprints")
data("Titanic")
data("Cars93")
data("ToothGrowth") #not part of UsingR
attach(kid.weights)
attach(michelson)
attach(fat)
attach(SAT)
attach(heartrate)
attach(grades)
attach(Fingerprints)
attach(Cars93)
attach(Titanic)
# use data() to see all datasets
# #use answers() to get answers to some of the problems in the UsingR book
Cars93_1 <- transform(Cars93, price=cut(Price, c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive")))
Cars93_2 <- Cars93, price=cut(Price, c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive"))
?transform
Cars93_2 <- within(Cars93, price=cut(Price, c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive")))
Cars93_2 <- with(Cars93, price=cut(Price, c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive")))
View(Cars93)
View(Cars93_1)
class(Cars93)
class(Cars93_1)
cars92_3 <- mutate(Cars93, price=cut(Price,c(0, 15, 30, 75)), labels=c("Cheap", "Moderate", "Expensive"))
cars92_3 <- mutate(Cars93, price=cut(Price,c(0, 15, 30, 75))
)
View(cars92_3)
cars92_3 <- mutate(Cars93, price=cut(Price,c(0, 15, 30, 75),labels=c("Cheap", "Moderate", "Expensive"))
)
cars93_2 <- mutate(Cars93, price=cut(Price,c(0, 15, 30, 75),labels=c("Cheap", "Moderate", "Expensive"))
xyplot(MPG.highway ~ Weight | price, Car93_2, layout=c(3,1), type=c("p", "r"))
cars93_2 <- mutate(Cars93, price=cut(Price,c(0, 15, 30, 75),labels=c("Cheap", "Moderate", "Expensive")))
cars93_2 <- mutate(Cars93, price=cut(Price,c(0, 15, 30, 75),labels=c("Cheap", "Moderate", "Expensive")))
xyplot(MPG.highway ~ Weight | price, Car93_1, layout=c(3,1), type=c("p", "r"))
Cars93_1 <- transform(Cars93, price=cut(Price, c(0, 15, 30, 75), labels=c("Cheap", "Middle", "Expensive")))
xyplot(MPG.highway ~ Weight | price, Car93_1, layout=c(3,1), type=c("p", "r"))
xyplot(MPG.highway ~ Weight | price, Cars93_1, layout=c(3,1), type=c("p", "r"))
xyplot(MPG.highway ~ Weight | price, Cars93_2, layout=c(3,1), type=c("p", "r"))
Cars93_2 <- mutate(Cars93, price=cut(Price,c(0, 15, 30, 75),labels=c("Cheap", "Moderate", "Expensive")))
xyplot(MPG.highway ~ Weight | price, Cars93_2, layout=c(3,1), type=c("p", "r"))
xyplot(MPG.highway ~ Weight | price, Cars93_1, layout=c(3,1), type=c("p", "r"))
xyplot(MPG.highway ~ Weight | price, Cars93_1, layout=c(3,1), type=c("r"))
xyplot(MPG.highway ~ Weight | price, Cars93_1, layout=c(3,1), type=c("p", "r"))
xyplot(MPG.highway ~ Weight | price, Cars93_2, layout=c(3,1), type=c("p", "r"))
f <- function(x) x^2
x <- seq(-2,2, length=100)
p <- ggplot(data.frame(x=x, y=f(x)), aes=(x=x, y=y)) + geom_line()
p <- ggplot(data.frame(x=x, y=f(x)), aes(x=x, y=y)) + geom_line()
p
curve(f, -2,2)
p2 <- ggplot(Cars93, aes(x=Cylinders, y=MPG.highway)) + geom_boxplot()
p2
p2 <- p2 + geom_jitter(position=position_jitter(w=.1), alha=.25)
p2
p2 <- p2 + geom_jitter(position=position_jitter(w=.1), alha=.15)
p2
p2 <- p2 + geom_jitter(position=position_jitter(w=.1), alha=.55)
p2
p2 <- p2 + geom_jitter(position=position_jitter(w=.1), alpha=.55)
p2
p2 <- p2 + geom_jitter(position=position_jitter(w=.1), alpha=.25)
p2
data("morley")
attach(morley)
View(morley)
exp1_2 <- subset(morley, Expt %in% 1:2)
View(exp1_2)
exp1_2_1 <- morley[Expt==1 | Expt==2,]
View(exp1_2_1)
p2 <- ggplot(exp1_2, aes(x=Run, y=Speed, group=Expt, color=Expt)) + geom_line()
p2
#ggplot2 p 202 UsingR
f <- function(x) x^2
x <- seq(-2,2, length=100)
p <- ggplot(data.frame(x=x, y=f(x)), aes(x=x, y=y)) + geom_line()
#R has a function to do this easily:
curve(f, -2,2)
exp1_2_1 <- morley[Expt==1 | Expt==2]
exp1_2_1 <- morley[Expt==1 | Expt==2,]
exp1_2_1 <- morley[Expt==1:3,]
exp1_2_1 <- morley[Expt<<3,]
exp1_2_1 <- morley[Expt<3,]
exp1_2_1 <- morley[Expt<4,]
p3 <- ggplot(exp1_2, aes(x=Run, y=Speed, group=Expt, color=Expt)) + geom_line()
p3
p3 <- ggplot(exp1_2_1, aes(x=Run, y=Speed, group=Expt, color=Expt)) + geom_line()
p3
p4 <- ggplot(Cars93, aes(x=MPG.highway)) + stat_bin(binwidth=5)
p4
p4 <- ggplot(Cars93, aes(x=MPG.highway)) + stat_bin()
p4
p5 <- ggplot(Cars93, aes(x=MPG.highway, y=..density..)) + stat_bin(binwidth=5)
p5
p6 <- ggplot(Cars95, aes(x=MPG.highway)) + geom_histogram()
p6 <- ggplot(Cars93, aes(x=MPG.highway)) + geom_histogram()
p6
p6 <- ggplot(Cars93, aes(x=MPG.highway)) + geom_histogram(bin=5)
p6
p7 <- ggplot(Cars95, aes(x=MPG.highway, y=..density..)) + geom_histogram(alpha=.5) + geom_density()
p7 <- ggplot(Cars93, aes(x=MPG.highway, y=..density..)) + geom_histogram(alpha=.5) + geom_density()
p7
p7 <- ggplot(Cars93, aes(x=MPG.highway, y=..density..)) + geom_histogram(alpha=.5, binwidth=5) + geom_density()
p7
p8 <- ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point()+ geom_smooth()
p8
p8 <- geom_smooth(method="lm", se=FALSE)#removes the standard error shading from the plot above
p8
p8 <- geom_smooth(method="lm", se=FALSE)#removes the standard error shading from the plot above
p8
p8 <- ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point()+ geom_smooth(method="lm", se=FALSE)
p8
p8 <- ggplot(Cars93, aes(x=Weight, y=MPG.highway)) + geom_point()+ geom_smooth(method="lm",formula=y ~ poly(x,2), se=FALSE)
p8
data(PearsonLee)
attach(PearsonLee)
View(PearsonLee)
p9 <- ggplot(PearsonLee, aes(y=child, x=parent)) + geom_point(alpha=.5) +geom_smooth(method="loess") + facet_grid(par ~ chl)
p9
p10 <- ggplot(Cars93_1, aes(x=Weight, y=MPG.highway)) + geom_point(cex=3) + geom_smooth(method="lm", se=FALSE) +
facet_grid(~ price)
p10
p9 <- ggplot(PearsonLee, aes(y=child, x=parent)) + geom_point(alpha=.5) +
geom_smooth(method="loess") + facet_grid(par ~ chl)
p11<- ggplot(PearsonLee, aes(y=child, x=parent)) + geom_point(alpha=.5) +
geom_smooth(method="loess") + facet_grid(par ~ chl, margins="chl")
p9
p11
p9
p11
p9
p11
p12 <- ggplot(morley, aes(x=Speed)) + geom_histogram(binwith=50) + facet_wrap(~Expt)
p12
